{"version":3,"file":"component---src-templates-static-site-js-29e2f2fbd50d0473ba69.js","mappings":"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","sources":["webpack://web-page/./src/templates/static-site.js","webpack://web-page/./node_modules/gatsby-plugin-next-seo/src/meta/base-seo.tsx","webpack://web-page/./node_modules/gatsby-plugin-next-seo/src/meta/gatsby-seo.tsx","webpack://web-page/./src/components/markdown-component.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../layout/layout\";\nimport MarkdownPost from \"../components/markdown-component\";\n\n\nconst StaticSiteTemplate = ({ data }) => {\n  const post = data.markdownRemark\n  const title = post.frontmatter.title;\n  const description = post.frontmatter.description || post.excerpt;\n  const html = post.html\n\n  return (\n    <Layout>\n      <MarkdownPost title={title} description={description} html={html} />\n    </Layout>\n  )\n}\n\nexport default StaticSiteTemplate\n\nexport const pageQuery = graphql`\n  query StaticSiteBySlug(\n    $id: String!\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Helmet, HelmetProps } from 'react-helmet-async';\n\nimport { AllSeoProps, LinkProps, MetaProps } from '../types';\n\nconst BASE_DEFAULTS = {\n  noindex: false,\n  nofollow: false,\n  defaultOpenGraphImageWidth: 0,\n  defaultOpenGraphImageHeight: 0,\n  defaultOpenGraphVideoWidth: 0,\n  defaultOpenGraphVideoHeight: 0,\n};\n\nlet DEFAULTS = { ...BASE_DEFAULTS };\n\n/**\n * Reset all the defaults.\n *\n * @internal\n */\nexport const __resetDefaults = () => {\n  DEFAULTS = { ...BASE_DEFAULTS };\n};\n\n/**\n * This is the BaseSeo component which also takes in the default seo props.\n *\n * @remarks\n *\n * It should be used for setting default props and is used internally as the\n * base for the `GatsbySeo` component.\n *\n * ```tsx\n * import { BaseSeo } from 'gatsby-plugin-next-seo';\n *\n * const Page = () => {\n *   return (\n *     <>\n *       <BaseSeo title='Fun times' defaultOpenGraphImageWidth={100} />\n *       <h1>Look at me!</h1>\n *     </>\n *   );\n * };\n * ```\n *\n * @public\n */\nexport const BaseSeo = ({\n  defer = false,\n  metaTags = [],\n  linkTags = [],\n  ...props\n}: AllSeoProps) => {\n  const meta: MetaProps[] = [];\n  const link: LinkProps[] = [];\n\n  const noindex =\n    (props.noindex ?? DEFAULTS.noindex) ||\n    props.dangerouslySetAllPagesToNoIndex;\n  const nofollow =\n    (props.nofollow ?? DEFAULTS.nofollow) ||\n    props.dangerouslySetAllPagesToNoFollow;\n\n  const indexTags = ['robots', 'googlebot'];\n  if (noindex || nofollow) {\n    if (props.dangerouslySetAllPagesToNoIndex) {\n      DEFAULTS.noindex = true;\n    }\n    if (props.dangerouslySetAllPagesToNoFollow) {\n      DEFAULTS.nofollow = true;\n    }\n\n    for (const name of indexTags) {\n      meta.push({\n        name,\n        content: `${noindex ? 'noindex' : 'index'},${\n          nofollow ? 'nofollow' : 'follow'\n        }`,\n      });\n    }\n  } else {\n    for (const name of indexTags) {\n      meta.push({ name, content: 'index,follow' });\n    }\n  }\n\n  if (props.description) {\n    meta.push({ name: 'description', content: props.description });\n  }\n\n  if (props.mobileAlternate) {\n    link.push({\n      rel: 'alternate',\n      media: props.mobileAlternate.media,\n      href: props.mobileAlternate.href,\n    });\n  }\n\n  if (props.languageAlternates && props.languageAlternates.length > 0) {\n    props.languageAlternates.forEach((languageAlternate) => {\n      link.push({\n        rel: 'alternate',\n        key: `languageAlternate-${languageAlternate.hrefLang}`,\n        hrefLang: languageAlternate.hrefLang,\n        href: languageAlternate.href,\n      });\n    });\n  }\n\n  if (props.twitter) {\n    if (props.twitter.cardType) {\n      meta.push({ name: 'twitter:card', content: props.twitter.cardType });\n    }\n\n    if (props.twitter.site) {\n      meta.push({ name: 'twitter:site', content: props.twitter.site });\n    }\n\n    if (props.twitter.handle) {\n      meta.push({ name: 'twitter:creator', content: props.twitter.handle });\n    }\n  }\n\n  if (props.facebook) {\n    if (props.facebook.appId) {\n      meta.push({ property: 'fb:app_id', content: props.facebook.appId });\n    }\n  }\n\n  if (props.openGraph) {\n    if (props.openGraph.url || props.canonical) {\n      meta.push({\n        property: 'og:url',\n        content: props.openGraph.url ?? props.canonical,\n      });\n    }\n\n    if (props.openGraph.type) {\n      const type = props.openGraph.type.toLowerCase();\n\n      meta.push({ property: 'og:type', content: type });\n\n      if (type === 'profile' && props.openGraph.profile) {\n        if (props.openGraph.profile.firstName) {\n          meta.push({\n            property: 'profile:first_name',\n            content: props.openGraph.profile.firstName,\n          });\n        }\n\n        if (props.openGraph.profile.lastName) {\n          meta.push({\n            property: 'profile:last_name',\n            content: props.openGraph.profile.lastName,\n          });\n        }\n\n        if (props.openGraph.profile.username) {\n          meta.push({\n            property: 'profile:username',\n            content: props.openGraph.profile.username,\n          });\n        }\n\n        if (props.openGraph.profile.gender) {\n          meta.push({\n            property: 'profile:gender',\n            content: props.openGraph.profile.gender,\n          });\n        }\n      } else if (type === 'book' && props.openGraph.book) {\n        if (props.openGraph.book.authors?.length) {\n          props.openGraph.book.authors.forEach((author) => {\n            meta.push({\n              property: 'book:author',\n              content: author,\n            });\n          });\n        }\n\n        if (props.openGraph.book.isbn) {\n          meta.push({\n            property: 'book:isbn',\n            content: props.openGraph.book.isbn,\n          });\n        }\n\n        if (props.openGraph.book.releaseDate) {\n          meta.push({\n            property: 'book:release_date',\n            content: props.openGraph.book.releaseDate,\n          });\n        }\n\n        if (props.openGraph.book.tags?.length) {\n          props.openGraph.book.tags.forEach((tag) => {\n            meta.push({\n              property: 'book:tag',\n              content: tag,\n            });\n          });\n        }\n      } else if (type === 'article' && props.openGraph.article) {\n        if (props.openGraph.article.publishedTime) {\n          meta.push({\n            property: 'article:published_time',\n            content: props.openGraph.article.publishedTime,\n          });\n        }\n\n        if (props.openGraph.article.modifiedTime) {\n          meta.push({\n            property: 'article:modified_time',\n            content: props.openGraph.article.modifiedTime,\n          });\n        }\n\n        if (props.openGraph.article.expirationTime) {\n          meta.push({\n            property: 'article:expiration_time',\n            content: props.openGraph.article.expirationTime,\n          });\n        }\n\n        if (props.openGraph.article.authors?.length) {\n          props.openGraph.article.authors.forEach((author) => {\n            meta.push({\n              property: 'article:author',\n              content: author,\n            });\n          });\n        }\n\n        if (props.openGraph.article.section) {\n          meta.push({\n            property: 'article:section',\n            content: props.openGraph.article.section,\n          });\n        }\n\n        if (props.openGraph.article.tags?.length) {\n          props.openGraph.article.tags.forEach((tag) => {\n            meta.push({\n              property: 'article:tag',\n              content: tag,\n            });\n          });\n        }\n      } else if (\n        (type === 'video.movie' ||\n          type === 'video.episode' ||\n          type === 'video.tv_show' ||\n          type === 'video.other') &&\n        props.openGraph.video\n      ) {\n        if (props.openGraph.video.actors?.length) {\n          props.openGraph.video.actors.forEach((actor) => {\n            if (actor.profile) {\n              meta.push({\n                property: 'video:actor',\n                content: actor.profile,\n              });\n            }\n\n            if (actor.role) {\n              meta.push({\n                property: 'video:actor:role',\n                content: actor.role,\n              });\n            }\n          });\n        }\n\n        if (props.openGraph.video.directors?.length) {\n          props.openGraph.video.directors.forEach((director) => {\n            meta.push({\n              property: 'video:director',\n              content: director,\n            });\n          });\n        }\n\n        if (props.openGraph.video.writers?.length) {\n          props.openGraph.video.writers.forEach((writer) => {\n            meta.push({\n              property: 'video:writer',\n              content: writer,\n            });\n          });\n        }\n\n        if (props.openGraph.video.duration) {\n          meta.push({\n            property: 'video:duration',\n            content: props.openGraph.video.duration.toString(),\n          });\n        }\n\n        if (props.openGraph.video.releaseDate) {\n          meta.push({\n            property: 'video:release_date',\n            content: props.openGraph.video.releaseDate,\n          });\n        }\n\n        if (props.openGraph.video.tags?.length) {\n          props.openGraph.video.tags.forEach((tag) => {\n            meta.push({\n              property: 'video:tag',\n              content: tag,\n            });\n          });\n        }\n\n        if (props.openGraph.video.series) {\n          meta.push({\n            property: 'video:series',\n            content: props.openGraph.video.series,\n          });\n        }\n      }\n    }\n\n    if (props.openGraph.title || props.title) {\n      meta.push({\n        property: 'og:title',\n        content:\n          props.openGraph.title ??\n          (props.titleTemplate ?? '').replace('%s', props.title ?? ''),\n      });\n    }\n\n    if (props.openGraph.description || props.description) {\n      meta.push({\n        property: 'og:description',\n        content: props.openGraph.description ?? props.description,\n      });\n    }\n\n    // images\n    if (props.defaultOpenGraphImageWidth) {\n      DEFAULTS.defaultOpenGraphImageWidth = props.defaultOpenGraphImageWidth;\n    }\n\n    if (props.defaultOpenGraphImageHeight) {\n      DEFAULTS.defaultOpenGraphImageHeight = props.defaultOpenGraphImageHeight;\n    }\n\n    if (props.openGraph.images?.length) {\n      props.openGraph.images.forEach((image) => {\n        meta.push({\n          property: 'og:image',\n          content: image.url,\n        });\n\n        if (image.alt) {\n          meta.push({\n            property: 'og:image:alt',\n            content: image.alt,\n          });\n        }\n\n        if (image.width) {\n          meta.push({\n            property: 'og:image:width',\n            content: image.width.toString(),\n          });\n        } else if (DEFAULTS.defaultOpenGraphImageWidth) {\n          meta.push({\n            property: 'og:image:width',\n            content: DEFAULTS.defaultOpenGraphImageWidth.toString(),\n          });\n        }\n\n        if (image.height) {\n          meta.push({\n            property: 'og:image:height',\n            content: image.height.toString(),\n          });\n        } else if (DEFAULTS.defaultOpenGraphImageHeight) {\n          meta.push({\n            property: 'og:image:height',\n            content: DEFAULTS.defaultOpenGraphImageHeight.toString(),\n          });\n        }\n      });\n    }\n\n    // videos\n    if (props.defaultOpenGraphVideoWidth) {\n      DEFAULTS.defaultOpenGraphVideoWidth = props.defaultOpenGraphVideoWidth;\n    }\n\n    if (props.defaultOpenGraphVideoHeight) {\n      DEFAULTS.defaultOpenGraphVideoHeight = props.defaultOpenGraphVideoHeight;\n    }\n\n    if (props.openGraph.videos?.length) {\n      props.openGraph.videos.forEach((video) => {\n        meta.push({\n          property: 'og:video',\n          content: video.url,\n        });\n\n        if (video.alt) {\n          meta.push({\n            property: 'og:video:alt',\n            content: video.alt,\n          });\n        }\n\n        if (video.width) {\n          meta.push({\n            property: 'og:video:width',\n            content: video.width.toString(),\n          });\n        } else if (DEFAULTS.defaultOpenGraphVideoWidth) {\n          meta.push({\n            property: 'og:video:width',\n            content: DEFAULTS.defaultOpenGraphVideoWidth.toString(),\n          });\n        }\n\n        if (video.height) {\n          meta.push({\n            property: 'og:video:height',\n            content: video.height.toString(),\n          });\n        } else if (DEFAULTS.defaultOpenGraphVideoHeight) {\n          meta.push({\n            property: 'og:video:height',\n            content: DEFAULTS.defaultOpenGraphVideoHeight.toString(),\n          });\n        }\n      });\n    }\n\n    if (props.openGraph.locale) {\n      meta.push({ property: 'og:locale', content: props.openGraph.locale });\n    }\n\n    if (props.openGraph.site_name) {\n      meta.push({\n        property: 'og:site_name',\n        content: props.openGraph.site_name,\n      });\n    }\n  }\n\n  if (props.canonical) {\n    link.push({ rel: 'canonical', href: props.canonical, key: 'canonical' });\n  }\n\n  metaTags.forEach((tag) => {\n    meta.push(tag);\n  });\n\n  linkTags.forEach((tag) => {\n    link.push(tag);\n  });\n\n  const htmlAttributes = props.language\n    ? { lang: props.language, ...props.htmlAttributes }\n    : { ...props.htmlAttributes };\n\n  const helmetProps: HelmetProps = {\n    meta,\n    link,\n    defer,\n    htmlAttributes,\n  };\n\n  if (props.title) {\n    helmetProps['title'] = props.title;\n  }\n\n  if (props.titleTemplate) {\n    helmetProps['titleTemplate'] = props.titleTemplate;\n  }\n\n  return (\n    <>\n      <Helmet {...helmetProps}></Helmet>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { GatsbySeoProps } from '../types';\nimport { BaseSeo } from './base-seo';\n\n/**\n * This component render the tags in the `<head>` for SEO on a per page basis.\n * As a bare minimum, you should add a title and description.\n *\n * @remarks\n *\n * ```tsx\n * import React from 'react';\n * import { GatsbySeo } from 'gatsby-plugin-next-seo';\n *\n * export default () => (\n *   <>\n *     <GatsbySeo title='Simple Usage Example' description='A short description goes here.' />\n *     <p>Simple Usage</p>\n *   </>\n * );\n * ```\n *\n * @public\n */\nexport const GatsbySeo = ({\n  metaTags,\n  linkTags,\n  canonical,\n  description,\n  facebook,\n  htmlAttributes,\n  language,\n  languageAlternates,\n  mobileAlternate,\n  nofollow,\n  noindex,\n  openGraph,\n  title,\n  titleTemplate,\n  twitter,\n}: GatsbySeoProps) => {\n  return (\n    <BaseSeo\n      metaTags={metaTags}\n      linkTags={linkTags}\n      canonical={canonical}\n      description={description}\n      facebook={facebook}\n      htmlAttributes={htmlAttributes}\n      language={language}\n      languageAlternates={languageAlternates}\n      mobileAlternate={mobileAlternate}\n      nofollow={nofollow}\n      noindex={noindex}\n      openGraph={openGraph}\n      title={title}\n      titleTemplate={titleTemplate}\n      twitter={twitter}\n    />\n  );\n};\n","import * as React from \"react\";\nimport { GatsbySeo } from \"gatsby-plugin-next-seo/src/meta/gatsby-seo\";\n\nexport default function MarkdownPost(props: any) {\n    return (\n      <>\n      <GatsbySeo\n        title={props.title}\n        description={props.description}\n      />\n          <article\n            className=\"blog-post\"\n            itemScope\n          >\n            <div>\n              <h1 itemProp=\"headline\">{props.title}</h1>\n            </div>\n            <section\n              dangerouslySetInnerHTML={{ __html: props.html }}\n              itemProp=\"articleBody\"\n            />\n            <hr />\n          </article>\n    </>\n    );\n}\n"],"names":["post","data","markdownRemark","title","frontmatter","description","excerpt","html","React","Layout","MarkdownPost","BASE_DEFAULTS","noindex","nofollow","defaultOpenGraphImageWidth","defaultOpenGraphImageHeight","defaultOpenGraphVideoWidth","defaultOpenGraphVideoHeight","DEFAULTS","BaseSeo","defer","metaTags","linkTags","props","meta","link","dangerouslySetAllPagesToNoIndex","dangerouslySetAllPagesToNoFollow","indexTags","name","push","content","mobileAlternate","rel","media","href","languageAlternates","length","forEach","languageAlternate","key","hrefLang","twitter","cardType","site","handle","facebook","appId","property","openGraph","url","canonical","type","toLowerCase","profile","firstName","lastName","username","gender","book","authors","_props$openGraph$book","author","isbn","releaseDate","tags","_props$openGraph$book2","tag","article","publishedTime","modifiedTime","expirationTime","_props$openGraph$arti","section","_props$openGraph$arti2","video","actors","_props$openGraph$vide","actor","role","directors","_props$openGraph$vide2","director","writers","_props$openGraph$vide3","writer","duration","toString","_props$openGraph$vide4","series","titleTemplate","replace","images","_props$openGraph$imag","image","alt","width","height","videos","_props$openGraph$vide5","locale","site_name","htmlAttributes","language","lang","helmetProps","Helmet","GatsbySeo","className","itemScope","itemProp","dangerouslySetInnerHTML","__html"],"sourceRoot":""}