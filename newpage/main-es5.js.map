{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/table-of-contents/table-of-content.ts","webpack:///src/app/pages/table-of-contents/table-of-contents.component.html","webpack:///src/app/pages/table-of-contents/table-of-contents.component.ts","webpack:///src/app/pages/static-sites/static-site.component.ts","webpack:///src/app/pages/static-sites/static-site.component.html","webpack:///src/app/static-pages.ts","webpack:///src/app/toolbar-menu/toolbar-menu.component.ts","webpack:///src/app/toolbar-menu/toolbar-menu.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","routes","path","redirectTo","pathMatch","entry","push","fileName","component","AppModule","forRoot","scrollPositionRestoration","anchorScrolling","loader","sanitize","NONE","TableOfContentEntry","level","text","anchor","TableOfContentsComponent","tableOfContent","length","StaticSiteComponent","router","activatedRoute","markdownService","isFirstTableRow","configureMarkDownFileName","renderer","heading","raw","renderHeading","renderText","table","header","body","renderTable","tablerow","content","renderTableRow","tablecell","renderTableCell","link","renderLink","url","pathToMdFile","getMarkdownFileNameFromRouteUrl","urlPart","split","filePath","startsWith","anchorPrefix","options","headerPrefix","toLowerCase","replace","headerTag","trim","isMetadataTag","console","log","flags","textTrimmed","metadataTags","some","x","href","staticPagePrefix","documentsPrefix","STATIC_PAGES","displayName","ToolbarMenuComponent","menuItems","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'Lukas Woodtli\\'s Web Page';\n}\n","<app-toolbar-menu></app-toolbar-menu>\n<router-outlet></router-outlet>\n","import {NgModule, SecurityContext} from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { ToolbarMenuComponent } from './toolbar-menu/toolbar-menu.component';\nimport { StaticSiteComponent } from './pages/static-sites/static-site.component';\n\nimport {MarkdownModule, MarkdownService} from 'ngx-markdown';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {RouterModule, Routes} from '@angular/router';\nimport {STATIC_PAGES} from './static-pages';\nimport { TableOfContentsComponent } from './pages/table-of-contents/table-of-contents.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'index', pathMatch: 'full' }\n];\n\nfor (const entry of STATIC_PAGES) {\n  routes.push({path: entry.fileName, component: StaticSiteComponent});\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToolbarMenuComponent,\n    StaticSiteComponent,\n    TableOfContentsComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled'\n    }),\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatToolbarModule,\n    HttpClientModule,\n    MarkdownModule.forRoot({\n      loader: HttpClient,\n      sanitize: SecurityContext.NONE\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class TableOfContentEntry {\n    constructor(readonly level: number,\n                readonly text: string,\n                readonly anchor: string) {\n    }\n}\n\nexport type TableOfContent = TableOfContentEntry[];\n","<div *ngIf=\"showToc()\">\n  <h1 id=\"table-of-contents\">Contents</h1>\n  <ul>\n    <div *ngFor=\"let tocEntry of tableOfContent\">\n      <li>\n        <a [routerLink]='\".\"' [fragment]='tocEntry.anchor'>\n          {{tocEntry.text}}\n        </a></li>\n    </div>\n  </ul>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {TableOfContent} from './table-of-content';\n\n@Component({\n  selector: 'app-table-of-contents',\n  templateUrl: './table-of-contents.component.html',\n  styleUrls: ['./table-of-contents.component.sass']\n})\nexport class TableOfContentsComponent implements OnInit {\n\n  @Input() tableOfContent: TableOfContent = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  showToc(): boolean {\n   return this.tableOfContent.length > 0;\n  }\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {MarkdownService} from 'ngx-markdown';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TableOfContent, TableOfContentEntry} from '../table-of-contents/table-of-content';\n\n@Component({\n  selector: 'app-static-site',\n  templateUrl: './static-site.component.html',\n  styleUrls: ['./static-site.component.sass'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class StaticSiteComponent implements OnInit {\n\n  pathToMdFile: string;\n\n  tableOfContent: TableOfContent = [];\n\n  private isFirstTableRow = true;\n\n  constructor(private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private markdownService: MarkdownService) {\n    this.isFirstTableRow = true;\n  }\n\n  ngOnInit(): void {\n\n    this.configureMarkDownFileName();\n\n    this.markdownService.renderer.heading = (text, level, raw) =>\n      this.renderHeading(text, level, raw);\n\n    this.markdownService.renderer.text = (text: string ) => this.renderText(text);\n\n    this.markdownService.renderer.table = (header, body) => this.renderTable(header, body);\n\n    this.markdownService.renderer.tablerow = (content: string) => this.renderTableRow(content);\n\n    this.markdownService.renderer.tablecell = this.renderTableCell;\n\n    this.markdownService.renderer.link = this.renderLink;\n  }\n\n  private configureMarkDownFileName(): void {\n    const url = this.router.url;\n    this.pathToMdFile = this.getMarkdownFileNameFromRouteUrl(url);\n  }\n\n  private getMarkdownFileNameFromRouteUrl(url): string {\n    const urlPart = url.split('#')[0];\n    let filePath = 'assets/pages';\n    if (!urlPart.startsWith('/')) {\n      filePath += '/';\n    }\n    return `${filePath}${urlPart}.md`;\n  }\n\n  private renderHeading(text, level, raw): string {\n    let anchorPrefix = this.markdownService.options.headerPrefix;\n    anchorPrefix = anchorPrefix ? anchorPrefix : '';\n    const anchor =  anchorPrefix  + raw.toLowerCase().replace(/[^\\w]+/g, '-');\n    this.tableOfContent.push(new TableOfContentEntry(level, raw, anchor));\n    const headerTag = `<h${level} id='${anchor}'>${text}</h${level}>`;\n\n    return headerTag;\n  }\n\n  private renderText(text: string): string {\n    if (text.trim() === '[TOC]') {\n      return '';\n    }\n\n    if (this.isMetadataTag(text)) {\n      console.log(`Warning removing meta data from Markdown file: ${text}`);\n      return '';\n    }\n\n    return text;\n  }\n\n  private renderTable(header, body): string {\n    this.isFirstTableRow = true;\n    return '<div class=\"mat-table\">' + header + body + '</div>';\n  }\n\n    private renderTableRow(content: string) {\n    if (this.isFirstTableRow) {\n      this.isFirstTableRow = false;\n      return '<div class=\"mat-header-row\">' + content + '</div>';\n    }\n    return '<div class=\"mat-row\">' + content + '</div>';\n  }\n\n  private renderTableCell(content: string, flags)  {\n    if (flags.header) {\n      return '<div class=\"mat-header-cell\">' + content + '</div>';\n    }\n    return '<div class=\"mat-cell\">' + content + '</div>';\n  }\n\n  private isMetadataTag(text: string): boolean {\n    const textTrimmed = text.trim();\n\n    const metadataTags = ['Title:', 'slug:', 'save_as:', 'URL:'];\n\n    return metadataTags.some(x => textTrimmed.startsWith(x));\n  }\n\n  private renderLink(href: string | null, title: string | null, text: string): string {\n    console.log(`href: ${href}, title: ${title}, text: ${text}`);\n    const staticPagePrefix = '{filename}/pages';\n    const documentsPrefix = '/documents/';\n    let url = href;\n    if(href.startsWith(staticPagePrefix)) {\n      url = href.replace(staticPagePrefix, '');\n      url = url.replace('.md', '');\n      console.log(`Warning fixing link: ${href} to ${url}`);\n    }\n    else if(href.startsWith(documentsPrefix)) {\n      url = href.replace(documentsPrefix, '/assets/documents/');\n      console.log(`Warning fixing link: ${href} to ${url}`);\n    }\n    return `<a href=\"${url}\">${text}</a>`;\n  }\n}\n","<div class=\"document-wrapper\">\n  <app-table-of-contents [tableOfContent]=\"tableOfContent\"></app-table-of-contents>\n\n  <markdown [src]=\"pathToMdFile\"></markdown>\n</div>\n","\n\nexport const STATIC_PAGES = [\n  {displayName: 'Home', fileName: 'index'},\n  {displayName: 'Resume', fileName: 'resume'},\n  {displayName: 'Skills', fileName: 'skills'},\n  {displayName: 'Books', fileName: 'books'},\n  {displayName: 'Courses', fileName: 'courses'},\n  {displayName: 'Projects', fileName: 'projects'},\n  {displayName: 'Blog', fileName: 'blog'},\n  {displayName: 'Contact', fileName: 'contact'}\n//  {display_name: '', file_name: 'recruiters_headhunters'},\n];\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {STATIC_PAGES} from '../static-pages';\n\n@Component({\n  selector: 'app-toolbar-menu',\n  templateUrl: './toolbar-menu.component.html',\n  styleUrls: ['./toolbar-menu.component.sass']\n})\nexport class ToolbarMenuComponent implements OnInit {\n  menuItems = STATIC_PAGES;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n  <mat-toolbar color=\"primary\">\n    <span class = \"gap\">\n      <button mat-button routerLink=\"/\">Lukas Woodtli</button>\n    </span>\n    <span class = \"filler\"></span>\n    <span *ngFor=\"let menuItem of menuItems\">\n      <button mat-button routerLink=\"/{{menuItem.fileName}}\">\n        {{menuItem.displayName}}\n      </button>\n    </span>\n  </mat-toolbar>\n</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}